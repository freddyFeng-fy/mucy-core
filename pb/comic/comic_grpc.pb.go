// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: comic.proto

package comic

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// ComicServiceClient is the client API for ComicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ComicServiceClient interface {
}

type comicServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewComicServiceClient(cc grpc.ClientConnInterface) ComicServiceClient {
	return &comicServiceClient{cc}
}

// ComicServiceServer is the server API for ComicService service.
// All implementations must embed UnimplementedComicServiceServer
// for forward compatibility
type ComicServiceServer interface {
	mustEmbedUnimplementedComicServiceServer()
}

// UnimplementedComicServiceServer must be embedded to have forward compatible implementations.
type UnimplementedComicServiceServer struct {
}

func (UnimplementedComicServiceServer) mustEmbedUnimplementedComicServiceServer() {}

// UnsafeComicServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ComicServiceServer will
// result in compilation errors.
type UnsafeComicServiceServer interface {
	mustEmbedUnimplementedComicServiceServer()
}

func RegisterComicServiceServer(s grpc.ServiceRegistrar, srv ComicServiceServer) {
	s.RegisterService(&ComicService_ServiceDesc, srv)
}

// ComicService_ServiceDesc is the grpc.ServiceDesc for ComicService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ComicService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ComicService",
	HandlerType: (*ComicServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "comic.proto",
}
